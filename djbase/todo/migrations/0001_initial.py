# Generated by Django 4.1.4 on 2023-02-07 05:54

from django.db import migrations, models
import django.utils.timezone
import todo.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Todo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=30, verbose_name="曲名")),
                (
                    "artist",
                    models.CharField(max_length=20, null=True, verbose_name="歌手名"),
                ),
                ("description", models.TextField(blank=True, verbose_name="コメント")),
                ("datetime", models.DateTimeField(auto_now=True, verbose_name="登録日")),
                (
                    "hiki_type",
                    models.CharField(
                        choices=[
                            ("-指弾き-", "指弾き"),
                            ("-指弾き・一部スラップ-", "指弾き・一部スラップ"),
                            ("-スラップ-", "スラップ"),
                        ],
                        default="指弾き",
                        max_length=50,
                        verbose_name="弾き方",
                    ),
                ),
                ("share_url", models.URLField(blank=True, verbose_name="埋め込みURL")),
            ],
        ),
        migrations.CreateModel(
            name="WebColor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=50, verbose_name="タイトル")),
                (
                    "body_color",
                    models.CharField(
                        default="white", max_length=50, verbose_name="ボディ"
                    ),
                ),
                (
                    "body_text",
                    models.CharField(
                        default="black", max_length=50, verbose_name="テキストカラー"
                    ),
                ),
                (
                    "head",
                    models.CharField(
                        default="lightgray", max_length=50, verbose_name="ヘッダー"
                    ),
                ),
                (
                    "head_text",
                    models.CharField(
                        default="black", max_length=50, verbose_name="ヘッダーテキスト"
                    ),
                ),
                (
                    "footer",
                    models.CharField(
                        default="lightgray", max_length=50, verbose_name="フッター"
                    ),
                ),
                (
                    "footer_text",
                    models.CharField(
                        default="black", max_length=50, verbose_name="フッターテキスト"
                    ),
                ),
                (
                    "app",
                    models.BooleanField(
                        default=True, help_text="適用する場合はチェック", verbose_name="公開する"
                    ),
                ),
            ],
            options={"verbose_name": "カラー設定", "verbose_name_plural": "カラー設定",},
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=30, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={"verbose_name": "user", "verbose_name_plural": "users",},
            managers=[("objects", todo.models.CustomUserManager()),],
        ),
    ]
